name: 🔖 Versioned Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version for this release (e.g. v1.2.3)'
        required: true
      target_branch:
        description: 'Branch to release from (default: main)'
        required: false
        default: 'main'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # needed to create tags/releases

    steps:
      - name: Validate version format
        run: |
          VERSION="${{ github.event.inputs.release_version }}"
          if ! echo "$VERSION" | grep -Eq '^v[0-9]+\.[0-9]+\.[0-9]+(-[a-z0-9.\+]+)?$'; then
            echo "❌ Invalid version format: '$VERSION'"
            echo "Expected format: v1.2.3 or v1.2.3-beta.1"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.target_branch }}

      - name: Confirm current branch
        run: git branch --show-current

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Make release commit
        run: |
          echo "${{ github.event.inputs.release_version }}" > VERSION.txt
          yq -i ".sceptre_user_data.cinco_version = \"${{ github.event.inputs.release_version }}\"" infrastructure/cinco/config/config.yaml

          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add VERSION.txt infrastructure/cinco/config/config.yaml
          git commit -am "Release ${{ github.event.inputs.release_version }}"
          git tag "${{ github.event.inputs.release_version }}"
          git push origin HEAD
          git push origin "${{ github.event.inputs.release_version }}"

      - name: Create Release with Auto Release Notes
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ github.event.inputs.release_version }}"
          name: "${{ github.event.inputs.release_version }}"
          generateReleaseNotes: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
