#!/bin/bash -e

set -euo pipefail

# This script takes as an argument the ID of a finding aid
# and deletes the finding aid from Solr

# check that we have a finding aid ID and repository code
if [ -z "$2" ]; then
  echo "Usage: $0 <finding_aid_id - typically an ark> <repository_code>"
  exit 1
fi

# check that the SOLR_WRITER environment variable is set
if [ -z "$SOLR_WRITER" ]; then
  echo "The SOLR_WRITER environment variable must be set"
  exit 1
fi

echo "Deleting Finding Aid: $1"
findaid_id=$1

curl --fail -X POST "$SOLR_WRITER/update?commit=true" \
    -H "Content-Type: text/xml" \
    --data-binary "<delete><id>$findaid_id</id></delete>"

# deal with any errors

REPO_NAME=$(bundle exec rake repo:urlized_name\[$2\])
echo "Running cache invalidation for $findaid_id and $REPO_NAME landing page"
if [ -z "$CLOUDFRONT_DISTRIBUTION_ID" ]; then
  echo "CLOUDFRONT_DISTRIBUTION_ID not set, skipping cache invalidation."
else
  echo "Invalidating urls: /findaid/$findaid_id and /search?f%5Blevel%5D%5B%5D=Collection&f%5Brepository%5D%5B%5D=$REPO_NAME&sort=title_sort+asc"
  cf=$(aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/findaid/$findaid_id" "/search?f%5Blevel%5D%5B%5D=Collection&f%5Brepository%5D%5B%5D=$REPO_NAME&sort=title_sort+asc")
  echo "Invalidation submitted: $cf"
fi
