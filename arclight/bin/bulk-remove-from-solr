#!/bin/bash -e

# This script takes as an argument the name of a key
# in s3://$S3_BUCKET/removals/ containing a csv list
# of finding aid ID, repository code pairs to delete,
# and deletes the finding aids from solr

# check that we have an s3 key
if [ -z "$1" ]; then
    echo "Usage: $0 <s3_key>"
    exit 1
fi

# check that the S3_BUCKET environment variable is set
if [ -z "$S3_BUCKET" ]; then
    echo "The S3_BUCKET environment variable must be set"
    exit 1
fi

echo "Downloading S3 file $S3_BUCKET/$1 to /tmp/$1"
aws s3 cp s3://"$S3_BUCKET"/removals/"$1" /tmp/"$1"

queries=""
while IFS=, read -r findaid_id repo_code || [ -n "$findaid_id" ]
do
    # Trim leading/trailing whitespace
    findaid_id="${findaid_id##*( )}"
    findaid_id="${findaid_id%%*( )}"
    escaped_findaidid="${findaid_id//\:/\\\:}"
    escaped_findaidid="${escaped_findaidid//\//\\\/}"
    queries+="<query>_root_:$escaped_findaidid</query>"
done < "/tmp/$1"

curl -X POST "$SOLR_WRITER/update?commit=true" \
    -H "Content-Type: text/xml" \
    --data-binary "<delete>$queries</delete>"

echo "Finished deleting finding aids from arclight"
echo "Now creating a cache invalidation for each page and their repositories"

paths=""
declare -A repo_names_seen
while IFS=, read -r findaid_id repo_code || [ -n "$findaid_id" ]
do
    # Trim leading/trailing whitespace of findaid_id and repo_code
    findaid_id="$(echo "$findaid_id" | sed 's/^ *//;s/ *$//')"
    repo_code="$(echo "$repo_code" | sed 's/^ *//;s/ *$//')"
    repo_name=$(bundle exec rake repo:urlized_name[$repo_code])
    paths+="\"/findaid/$findaid_id\" "
    # Only add the repository search path if we haven't seen this repo_name before
    if [[ -z "${repo_names_seen[$repo_name]}" ]]; then
        paths+="\"/search?f%5Blevel%5D%5B%5D=Collection&f%5Brepository%5D%5B%5D=$repo_name&sort=title_sort+asc\" "
        repo_names_seen[$repo_name]=1
    fi
done < "/tmp/$1"

echo "Running cache invalidation for $paths"
echo "aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths $paths"
if [ -z "$CLOUDFRONT_DISTRIBUTION_ID" ]; then
    echo "CLOUDFRONT_DISTRIBUTION_ID not set, skipping cache invalidation."
else
  cf=$(aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths $paths)
  echo "Invalidation submitted: $cf"
fi
