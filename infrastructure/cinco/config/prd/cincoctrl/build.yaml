template:
  path: codebuild.j2
  type: file
parameters:
  GitHubRepo: https://github.com/ucldc/cinco
  Namespace: cinco-ctrl-prd
  Branch: ''
  ECRRepositoryURI: !stack_output stage/cincoctrl/codebuild::ECRRepository

sceptre_user_data:
  BuildEnvironment:
    - SUBNET_IDS: {{ var.prd.SUBNET_IDS }}
  TriggerFilterGroups:
  # A build is triggered if any filter group evaluates to true, which
  # occurs when all the filters in the group evaluate to true.
    - - Type: EVENT
        Pattern: RELEASED
  build_spec: |-
    !Sub >-
              version: 0.2

              phases:
                install:
                  runtime-versions:
                    python: 3.12
                build:
                  commands:
                    - TAG=`git describe --tags --abbrev=0`
                    - REPO="$AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com"
                    - NEW_IMAGE="$REPO/cinco-ctrl:$TAG"
                    - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $REPO
                    - docker build -t cinco-ctrl:$TAG cincoctrl --file cincoctrl/compose/production/django/Dockerfile
                    - docker tag cinco-ctrl:$TAG $NEW_IMAGE
                    - docker push $NEW_IMAGE
                post_build:
                  commands:
                    - echo "Registering new task definition with image: $NEW_IMAGE"
                    - TASK_FAMILY="cinco-ctrl-prd"
                    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$TASK_FAMILY")
                    - NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$NEW_IMAGE" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities) | del(.registeredAt) | del(.registeredBy)')
                    - aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEFINITION"
                    - echo "Running Django management commands with new task definition"
                    - chmod +x $CODEBUILD_SRC_DIR/infrastructure/cinco/scripts/ecs_manage.py
                    - python $CODEBUILD_SRC_DIR/infrastructure/cinco/scripts/ecs_manage.py --prd collectstatic --no-input
                    - python $CODEBUILD_SRC_DIR/infrastructure/cinco/scripts/ecs_manage.py --prd migrate --no-input
                    - echo "Forcing a new deployment of the service to apply changes"
                    - aws ecs update-service --cluster cinco-prd --service cinco-ctrl-prd-service --force-new-deployment
